Kult prosjektidÃ©! Ã… bruke PokÃ©mon API (f.eks. [PokeAPI](https://pokeapi.co/)) er en super mÃ¥te Ã¥ lÃ¦re mer om APIer pÃ¥ â€“ det er lett Ã¥ komme i gang med og gir masse kule data Ã¥ leke med.

Her er noen tips og prosjektforslag, rangert fra veldig enkel til litt mer utfordrende:

---

### ðŸ”¹ 1. **PokÃ©mon Oppslagsverk (PokÃ©dex Light)**
**Beskrivelse:** Lag en enkel nettside eller CLI-app hvor du kan sÃ¸ke opp en PokÃ©mon og fÃ¥ info tilbake.
**API-kall:** `https://pokeapi.co/api/v2/pokemon/{name}`
**Vis data som:**
- Navn
- Bilde (sprites)
- Typer (f.eks. "fire", "water")
- Stats (HP, attack, etc.)

**Utfordring + bonus:**
- Legg til en dropdown med forslag/autofullfÃ¸r
- Vis farger eller ikoner for typer

---

### ðŸ”¹ 2. **"Hvem er den PokÃ©monen?" spill**
**Beskrivelse:** Vis et skjult bilde (f.eks. silhuett) av en PokÃ©mon og la brukeren gjette hvem det er.
**Hvordan:**
- Bruk sprites fra APIet
- MaskÃ©r bildet med CSS eller JS
- AvslÃ¸r nÃ¥r brukeren gjetter eller klikker "Vis svar"

---

### ðŸ”¹ 3. **Sammenlign PokÃ©mon**
**Beskrivelse:** La brukeren velge to PokÃ©mon og sammenlign stats, typer og vekt/hÃ¸yde.
**API-kall:** To kall til `pokemon/{name}`
**Presentasjon:** Bruk diagrammer eller tabeller

---

### ðŸ”¹ 4. **Team Builder**
**Beskrivelse:** Brukeren kan velge opptil 6 PokÃ©mon og fÃ¥ en oversikt over laget sitt.
- Hvilke typer dekker laget?
- Er det svake punkter (f.eks. alle er svake mot "water")?
- Du kan bruke type-effektivitet fra `https://pokeapi.co/api/v2/type/{type}`

---

### ðŸ”¹ 5. **Filtrering og sÃ¸k**
**Beskrivelse:** Lag et sÃ¸kefelt og filtre (f.eks. etter type, vekt, stats)
- Hent flere PokÃ©mon samtidig (paginering)
- Bruk `https://pokeapi.co/api/v2/pokemon?limit=100&offset=0`

---

### Teknologier Ã¥ vurdere
- Frontend: HTML/CSS/JS, React, Vue, eller bare Vanilla JS for enkelhet
- Backend (valgfritt): Express, Flask, eller FastAPI hvis du vil lÃ¦re API-hÃ¥ndtering bakover
- Deployment: GitHub Pages, Vercel, Netlify

---

Vil du at jeg skal hjelpe deg med Ã¥ sette opp et fÃ¸rste eksempel eller wireframe for et av disse forslagene? ðŸ˜Š





function searchPokemon() {
            const nameOrId = document.getElementById("searchTxt").value.toLowerCase().trim();
            const resultDiv = document.getElementById("resultDiv");

            if (!nameOrId) {
                resultDiv.innerHTML = "Please enter a Pokemon name or ID.";
                return;
            }

            fetch("https://pokeapi.co/api/v2/pokemon/" + nameOrId)
                .then(response => {
                    if (!response.ok) throw new Error("Pokemon not found!");
                    return response.json();
                })
                .then(data => {
                    resultDiv.innerHTML = `
                        <h2>${data.name.toUpperCase()}</h2>
                        <img src="${data.sprites.front_default}" alt="${data.name}">
                        <p>Height: ${data.height}</p>
                        <p>Weight: ${data.weight}</p>
                    `;
                })
                .catch(error => {
                    resultDiv.innerHTML = error.message;
                });
        }
    </script>